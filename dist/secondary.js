const canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,partcilesGeometry=new THREE.BufferGeometry,partcileCnt=500,posArray=new Float32Array(1500);for(let e=0;e<1500;e++)posArray[e]=(Math.random()-.5)*(5*Math.random());partcilesGeometry.setAttribute("position",new THREE.BufferAttribute(posArray,3));const material=new THREE.PointsMaterial({size:.005,transparent:!0}),particlesMaterial=new THREE.PointsMaterial({size:.005,transparent:!0}),stars=new THREE.Points(partcilesGeometry,material);scene.add(stars);const pointLight=new THREE.PointLight(16777215,.1);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=0,camera.position.y=0,camera.position.z=2,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.setClearColor(new THREE.Color("#21282a"),1),document.addEventListener("mousemove",animateParticles);let mouseX=0,mouseY=0;function animateParticles(e){mouseY=e.clientY,mouseX=e.clientX}const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime();stars.rotation.y=mouseY*(8e-4*e),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();